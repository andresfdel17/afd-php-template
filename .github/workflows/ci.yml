name: CI - Tests and Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    name: PHP Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.0, 8.1, 8.2]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, pdo_mysql, mbstring, xml, json, tokenizer, openssl
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Configure environment
        run: |
          sed -i 's/DB_HOST="localhost"/DB_HOST="127.0.0.1"/' .env
          sed -i 's/DB_NAME="mi_base_datos"/DB_NAME="test_db"/' .env
          sed -i 's/DB_USERNAME="usuario"/DB_USERNAME="root"/' .env
          sed -i 's/DB_PASSWORD="contrase√±a_segura"/DB_PASSWORD="root"/' .env

      - name: Setup database
        run: |
          mysql -h 127.0.0.1 -u root -proot test_db < database.sql

      - name: Run PHP syntax check
        run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;

      - name: Run Composer validation
        run: composer validate --strict

      - name: Run custom tests
        run: php tests/run_tests.php

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Security audit
        run: composer audit
